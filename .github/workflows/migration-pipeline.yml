name: Database Migration Pipeline

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'database-migrations/**'
      - '.github/workflows/migration-pipeline.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'database-migrations/**'

jobs:
  validate-migrations:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: flightdb_test
          POSTGRES_USER: flightuser
          POSTGRES_PASSWORD: flightpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
        env:
          discovery.type: single-node
          xpack.security.enabled: false
          ES_JAVA_OPTS: -Xms512m -Xmx512m
        options: >-
          --health-cmd "curl -f http://localhost:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 9200:9200

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build migration module
      run: |
        cd database-migrations
        mvn clean compile
    
    - name: Validate PostgreSQL migrations
      run: |
        cd database-migrations
        mvn spring-boot:run -Dspring-boot.run.arguments="--migration.postgresql.validate-only=true --migration.elasticsearch.enabled=false"
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: flightdb_test
        DB_USER: flightuser
        DB_PASSWORD: flightpass
    
    - name: Test Elasticsearch index creation
      run: |
        cd database-migrations
        mvn spring-boot:run -Dspring-boot.run.arguments="--migration.postgresql.enabled=false --migration.elasticsearch.enabled=true"
      env:
        ELASTICSEARCH_URIS: http://localhost:9200

  build-migration-image:
    runs-on: ubuntu-latest
    needs: validate-migrations
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Build JAR
      run: |
        cd database-migrations
        mvn clean package -DskipTests
    
    - name: Build Docker image
      run: |
        cd database-migrations
        docker build -t flight-booking-migrations:latest .
    
    - name: Save Docker image
      run: |
        docker save flight-booking-migrations:latest > migration-image.tar
    
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v3
      with:
        name: migration-docker-image
        path: migration-image.tar
